{
  "examples": [
    {
      "id": "001-basic-generation",
      "title": "Simple text generation",
      "description": "",
      "order": 1,
      "code_segments": [
        {
          "code": "\n",
          "display_code": "\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 2,
          "line_range": [
            2,
            2
          ]
        },
        {
          "code": "# Our first example demonstrates how to use the Gemini API\n# to generate content with a simple prompt.\n",
          "display_code": "",
          "annotation": "Our first example demonstrates how to use the Gemini API\nto generate content with a simple prompt.",
          "is_comment": true,
          "start_line": 3,
          "line_range": [
            3,
            4
          ],
          "target_line_range": [
            5,
            6
          ]
        },
        {
          "code": "from google import genai\n\n",
          "display_code": "from google import genai\n\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 5,
          "line_range": [
            5,
            6
          ]
        },
        {
          "code": "# Best practice: store your API key in an environment variable\n# and load it from there.\n",
          "display_code": "",
          "annotation": "Best practice: store your API key in an environment variable\nand load it from there.",
          "is_comment": true,
          "start_line": 7,
          "line_range": [
            7,
            8
          ],
          "target_line_range": [
            9,
            14
          ]
        },
        {
          "code": "client = genai.Client(api_key=\"YOUR_API_KEY\")\n\nresponse = client.models.generate_content(\n    model=\"gemini-2.0-flash\", contents=\"Explain how AI works in a few words\"\n)\nprint(response.text)\n",
          "display_code": "client = genai.Client(api_key=\"YOUR_API_KEY\")\n\nresponse = client.models.generate_content(\n    model=\"gemini-2.0-flash\", contents=\"Explain how AI works in a few words\"\n)\nprint(response.text)\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 9,
          "line_range": [
            9,
            14
          ]
        }
      ],
      "shell_segments": [
        {
          "explanation": "First, install the Google Generative AI library",
          "command": "pip install google-generative-ai",
          "output": ""
        },
        {
          "explanation": "Then run the program with Python",
          "command": "python basic-generation.py",
          "output": "AI works by learning patterns from data, then using those patterns to make predictions or generate new content. It processes information through neural networks that mimic human brain connections, identifying features and relationships to perform tasks like recognition, prediction, and generation."
        }
      ],
      "image_data": [
        {
          "path": "examples/001-basic-generation/basic-generation.png",
          "filename": "basic-generation.png",
          "caption": "Generation"
        }
      ],
      "section_id": "001-basic-text",
      "section_title": "Basic Examples: Text"
    },
    {
      "id": "002-streaming-text",
      "title": "Streaming Text Generation",
      "description": "This example demonstrates how to stream text when generating content using the Gemini API.",
      "order": 2,
      "code_segments": [
        {
          "code": "from google import genai\n\n",
          "display_code": "from google import genai\n\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 3,
          "line_range": [
            3,
            4
          ]
        },
        {
          "code": "# Initialize the Gemini client with your API key\n",
          "display_code": "",
          "annotation": "Initialize the Gemini client with your API key",
          "is_comment": true,
          "start_line": 5,
          "line_range": [
            5,
            5
          ],
          "target_line_range": [
            6,
            7
          ]
        },
        {
          "code": "client = genai.Client(api_key=\"YOUR_API_KEY\")\n\n",
          "display_code": "client = genai.Client(api_key=\"YOUR_API_KEY\")\n\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 6,
          "line_range": [
            6,
            7
          ]
        },
        {
          "code": "# Call the generate_content_stream method to get a stream of responses\n",
          "display_code": "",
          "annotation": "Call the generate_content_stream method to get a stream of responses",
          "is_comment": true,
          "start_line": 8,
          "line_range": [
            8,
            8
          ],
          "target_line_range": [
            9,
            12
          ]
        },
        {
          "code": "response = client.models.generate_content_stream(\n    model=\"gemini-2.0-flash\", contents=[\"Explain how AI works\"]\n)\n\n",
          "display_code": "response = client.models.generate_content_stream(\n    model=\"gemini-2.0-flash\", contents=[\"Explain how AI works\"]\n)\n\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 9,
          "line_range": [
            9,
            12
          ]
        },
        {
          "code": "# Iterate over the stream and print each chunk of text as it arrives\n",
          "display_code": "",
          "annotation": "Iterate over the stream and print each chunk of text as it arrives",
          "is_comment": true,
          "start_line": 13,
          "line_range": [
            13,
            13
          ],
          "target_line_range": [
            14,
            15
          ]
        },
        {
          "code": "for chunk in response:\n    print(chunk.text, end=\"\")\n",
          "display_code": "for chunk in response:\n    print(chunk.text, end=\"\")\n",
          "annotation": "",
          "is_comment": false,
          "start_line": 14,
          "line_range": [
            14,
            15
          ]
        }
      ],
      "shell_segments": [
        {
          "explanation": "First, install the Google Generative AI library",
          "command": "pip install google-generative-ai",
          "output": ""
        },
        {
          "explanation": "Then run the program with Python",
          "command": "python streaming_example.py",
          "output": "AI, or Artificial Intelligence, encompasses a range of techniques enabling machines to mimic human intelligence."
        }
      ],
      "image_data": [],
      "section_id": "001-basic-text",
      "section_title": "Basic Examples: Text"
    }
  ],
  "sections": [
    {
      "id": "001-basic-text",
      "title": "Basic Examples: Text",
      "description": "",
      "order": 1,
      "examples": [
        "001-basic-generation",
        "002-streaming-text"
      ]
    },
    {
      "id": "002-basic-images",
      "title": "Basic Examples: Images",
      "description": "",
      "order": 2,
      "examples": []
    }
  ]
}